Learning how to use github


In definition, git is a distributed version control system. Recovering files is a simple task with git.


Git can also be used as a server. The tasks of Git server include displaying all the content of a Git repository using the web, adding access control, and it also helps in managing the multiple repositories.


Install :

sudo apt-get update
sudo apt-get install git
git config --global user.name "add your name"
git config --global user.email "addyouremail@domain.com"
git config --list / nano ~/.gitconfig



1st_use :

git init REPO_NAME ==>
(Create a folder on your system. This will serve as a local repository which will later be pushed onto the GitHub website)

cd REPO_NAME
gedit ReadMEEE

git add ReadMEEE
git add any_file.any_extension

( Once all the files are added, we can commit it. This means that we have finalized what additions and/or changes have to be made and they are now ready to be uploaded to our repository. "some_message" in the above command can be any simple message like "my first commit" or "edit in readme", etc.)
git commit -m "anything"


(Create a repository on GitHub. Notice that the name of the repository should be the same as the repository's on the local system. In this case, it will be "REPO_NAME". To do this login to your account on https://github.com. Then click on the "plus(+)" symbol at the top right corner of the page and select "create new repository". Fill the details as shown in the image below and click on "create repository" button. Once this is created, we can push the contents of the local repository onto the GitHub repository in your profile. Connect to the repository on GitHub using the command:
Important Note: Make sure you replace 'user_name' and 'Mytest' in the path with your Github username and folder before running the command! )
git remote add origin https://github.com/user_name/Mytest.git


(The final step is to push the local repository contents into the remote host repository (GitHub), by using the command: )
git push origin master

